@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise 03");
    var thebutton = Request.Form["theButton"];

    string artistQuery = "SELECT ArtistId, Name FROM Artists ORDER BY Name";
    string InfoQuery = "INSERT INTO Albums (Title, ArtistId, ReleaseYear, ReleaseLabel) VALUES(@0, @1, @2, @3)";

    var title = "";
    var artistId = "0";
    var releaseYear = "";
    var releaseLabel = "";

    var db = Database.Open("CHINOOK");

    var artistSelect = db.Query(artistQuery);

    List<SelectListItem> artistList = new List<SelectListItem>();
    artistList.Add(new SelectListItem
    {
        Value = "0",
        Text = "select..."
    });

    foreach (var artist in artistSelect)
    {
        artistList.Add(new SelectListItem
        {
            Value = artist.ArtistId.ToString(),
            Text = artist.Name
        });
    }



    Validation.Add("Title",
        Validator.Required("Title is required"),
        Validator.StringLength(160, 0, "Title name is limited to 160 characters"));

    Validation.Add("ArtistList",
        Validator.Range(1, artistList.Count, "Artist is required"));

    Validation.Add("ReleaseYear",
        Validator.Required("Release Year is required"),
        Validator.Integer("Year is out of range"),
        Validator.Range(1950, DateTime.Today.Year, "Year is out of range, 1950 to today"));

    Validation.Add("ReleaseLabel",
        Validator.StringLength(50, 0, "Label is limited to 50 characters"));

}

@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    title = Request.Form["Title"];
    artistId = Request.Form["ArtistList"];
    releaseYear = Request.Form["ReleaseYear"];
    releaseLabel = Request.Form["ReleaseLabel"];
    var theButton = Request.Form["thebutton"];

    if (thebutton.Equals("clear"))
    {
        title = "";
        artistId = "0";
        releaseYear = "";
        releaseLabel = "";
    }
    else
    {
        if (Validation.IsValid())
        {
            try
            {

                db.Execute(InfoQuery, title,
                    artistId.Equals("0") ? null : artistId,
                    string.IsNullOrEmpty(releaseYear) ? null : releaseYear,
                    string.IsNullOrEmpty(releaseLabel) ? null : releaseLabel);
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
}
else
{

}

<fieldset>
    <legend>Enter Album</legend>
    @Html.ValidationSummary()
    <form id="theform" method="post">
        <div class="row offset-1">
            <label class="label" for="Title">Title:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("Title", title)</span>
        </div>

        <div class="row offset-1">
            <label class="label" for="ArtistList">Artist:</label>&nbsp;&nbsp;
            <span>@Html.DropDownList("ArtistList", artistList)</span>
        </div>

        <div class="row offset-1">
            <label class="label" for="ReleaseYear">Year:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("ReleaseYear", releaseYear)</span>
        </div>

        <div class="row offset-1">
            <label class="label" for="ReleaseLabel">Label:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("ReleaseLabel", releaseLabel)</span>
        </div>

        <div class="row offset-1">
            <div class="col-3">
                <button type="submit" id="theButton" name="theButton" value="add" class="btn btn-primary">Add</button>&nbsp;&nbsp;
                <button type="submit" id="theButton" name="theButton" value="clear" class="btn btn-light">Clear</button>
            </div>
        </div>
    </form>
</fieldset>